# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1723jaCoXeCh6m_m5SXB8XXhO_pbT-UPh
"""

# Let's plot the Stress-Strain curves using the data from the last uploaded file (Mooney 3-term model).
import pandas as pd
import matplotlib.pyplot as plt

# Load your data
money3_df = pd.read_excel('/content/Mooney3.xlsx')
mooney3_df.head()o

# Plotting
plt.figure(figsize=(8, 6))
plt.plot(mooney3_df['Epsilon_exp'], mooney3_df['Sigma_exp'], 'o-', label='Experimental Data', color='blue')
plt.plot(mooney3_df['Epsilon_mon'], mooney3_df['Sigma_mon '], 'x--', label='Mooney 3-Term Model', color='green')

plt.title('Stress-Strain Curve: Experimental vs Mooney 3-Term Model')
plt.xlabel('Strain (Epsilon)')
plt.ylabel('Stress (Sigma)')
plt.legend()
plt.grid(True)
plt.show()

# Calculate RMSE for the Mooney 3-Term model using cleaned data, which was earlier adjusted for NaNs
import numpy as np
from sklearn.metrics import mean_squared_error
mooney3_df_cleaned = mooney3_df.dropna()

mse_mooney3_cleaned = mean_squared_error(mooney3_df_cleaned['Sigma_exp'], mooney3_df_cleaned['Sigma_mon '])
rmse_mooney3_cleaned = np.sqrt(mse_mooney3_cleaned)

rmse_mooney3_cleaned

ogden2_df = pd.read_excel('/content/odgen2.xlsx')

# Plotting the Stress-Strain curves using the data from the Ogden 2-term model.

plt.figure(figsize=(10, 8))
plt.plot(ogden2_df['Epsilon_exp'], ogden2_df['Sigma_exp'], 'o-', label='Experimental Data', color='blue')
plt.plot(ogden2_df['Epsilon_odgen2'], ogden2_df['Sigma_odgen2'], 'x--', label='Ogden 2-Term Model', color='green')

plt.title('Stress-Strain Curve: Experimental vs Ogden 2-Term Model')
plt.xlabel('Strain (Epsilon)')
plt.ylabel('Stress (Sigma)')
plt.legend()
plt.grid(True)
plt.show()

# There are NaN values in the 'Sigma_odgen2' column. We will remove the rows with NaN values before calculating RMSE.

# Drop rows where 'Sigma_odgen2' is NaN
ogden2_df_cleaned = ogden2_df.dropna(subset=['Sigma_odgen2'])

# Recalculate RMSE after cleaning the data
mse_ogden2 = mean_squared_error(ogden2_df_cleaned['Sigma_exp'], ogden2_df_cleaned['Sigma_odgen2'])
rmse_ogden2 = np.sqrt(mse_ogden2)

rmse_ogden2

ogden3_df = pd.read_excel('/content/odgen3.xlsx')

# Plotting the Stress-Strain curves using the data from the Ogden 3-term model.

plt.figure(figsize=(10, 8))
plt.plot(ogden3_df['Epsilon_exp'], ogden3_df['Sigma_exp'], 'o-', label='Experimental Data', color='blue')
plt.plot(ogden3_df['Epsilon_odgen3'], ogden3_df['Sigma_odgen3 '], 'x--', label='Ogden 3-Term Model', color='green')

plt.title('Stress-Strain Curve: Experimental vs Ogden 3-Term Model')
plt.xlabel('Strain (Epsilon)')
plt.ylabel('Stress (Sigma)')
plt.legend()
plt.grid(True)
plt.show()

# There are NaN values in the 'Sigma_odgen3' column. We will remove the rows with NaN values before calculating RMSE.

# Drop rows where 'Sigma_odgen3' is NaN
ogden3_df_cleaned = ogden3_df.dropna(subset=['Sigma_odgen3 '])

# Recalculate RMSE after cleaning the data
mse_ogden3 = mean_squared_error(ogden3_df_cleaned['Sigma_exp'], ogden3_df_cleaned['Sigma_odgen3 '])
rmse_ogden3 = np.sqrt(mse_ogden3)

rmse_ogden3